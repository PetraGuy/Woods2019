source('C:/dev/code/Woods2019/code/WoodsMap.R')
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
UK <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
UK <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
View(mysites)
colname(mysites)[1] = "site"
colnames(mysites)[1] = "site"
View(mysites)
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
setwd("C:/dev/code/Woods2019/code")
library(cluster) #for gower distance
library(dplyr)
library(Rtsne)
library(ggplot2)
library(factoextra)
library(Gifi)
library(ggfortify)
library(FactoMineR)
woods = read.csv("../data/woodprops.csv", stringsAsFactors = TRUE, header = TRUE)
gower_dist = daisy(woods[,-1],
type = list(nominal = c(1,2,3,4)),
metric = "gower",
stand = TRUE)
gower_mat = as.matrix(gower_dist)
#add rownames so plat has labels
rownames(gower_mat) = woods$site
woods[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]),
arr.ind = TRUE)[1, ], ]
#most dissimilar
woods[which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]),
arr.ind = TRUE)[1, ], ]
sil_width = c(NA)
for (i in 2:19) {
pam_fit = pam(gower_dist,
diss = TRUE,
k=i)
sil_width[i] = pam_fit$silinfo$avg.width
}
plot(2:19, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(2:19, sil_width)
axis(side = 1,at = c(2:19))
#cluster using any other method and plot results
woods.clust =eclust(gower_mat,"pam",k = 13,stand = TRUE)
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
View(woods)
View(mysites)
View(woods)
library(rgdal)
View(mysites)
ndep = read.csv("../data/Ndep.csv", stringsAsFactors = TRUE, header = TRUE, skip = 6)
#convert Ndep data to long lat and extratc relevant data
setwd("C:/dev/code/Woods2019/code")
ndep = read.csv("../data/Ndep.csv", stringsAsFactors = TRUE, header = TRUE, skip = 6)
ndep = read.csv("../data/Ndep2014.csv",
stringsAsFactors = TRUE,
header = TRUE, skip = 6)
View(ndep)
View(ndep)
ndeplonglat = spTransform(ndep, CRS(latlong))
?`spTransform,SpatialGridDataFrame,CRS-method`
coords <- cbind(Easting = as.numeric(as.character(ndep$Easting)),
Northing = as.numeric(as.character(ndep$Northing)))
View(coords)
#create spatioal points dataframe
ndepSP = SpatialPointsDataFrame(coords, data = data.frame(GP$Surgery,
GP$GP_ID), proj4string = CRS("+init=epsg:27700"))
#creatre unique id for each row
coords$coords_ID <- 1:nrowcoords)
#creatre unique id for each row
coords$coords_ID = ( 1:nrowcoords)
#creatre unique id for each row
coords$coords_ID =  1:nrow(coords)
View(coords)
coords <- cbind(Easting = as.numeric(as.character(ndep$Easting)),
Northing = as.numeric(as.character(ndep$Northing)))
View(coords)
#creatre unique id for each row
coords_ID =  1:nrow(coords)
coords$coordsID = coords_ID
coords <- cbind(Easting = as.numeric(as.character(ndep$Easting)),
Northing = as.numeric(as.character(ndep$Northing)))
coords = cbind(coords_ID,coords)
View(coords)
#create spatioal points dataframe
ndepSP = SpatialPointsDataFrame(coords, data = data.frame(coords$coords_ID),
proj4string = CRS("+init=epsg:27700"))
#create spatioal points dataframe
ndepSP = SpatialPointsDataFrame(coords, data = c(coords$coords_ID),
proj4string = CRS("+init=epsg:27700"))
#create spatioal points dataframe
ndepSP = SpatialPointsDataFrame(coords, data = coords_ID,
proj4string = CRS("+init=epsg:27700"))
#create spatioal points dataframe
ndepSP = SpatialMultiPoints(coords, data = coords_ID,
proj4string = CRS("+init=epsg:27700"))
?SpatialMultiPoints
View(coords)
View(ndep)
View(coords)
View(ndep)
ndep = read.csv("../data/Ndep2014.csv",
stringsAsFactors = TRUE,
header = TRUE, skip = 6)
#creatre unique id for each row
coords_ID =  1:nrow(coords)
coords = cbind(coords_ID,ndep)
View(ndep)
#coords <- cbind(Easting = as.numeric(as.character(ndep$Easting)),
#Northing = as.numeric(as.character(ndep$Northing)))
#creatre unique id for each row
coords_ID =  1:nrow(coords)
coords = cbind(coords_ID,ndep)
View(ndep)
View(coords)
#create spatioal points dataframe
ndepSP = SpatialMultiPoints(coords, data = data.frame(coords$Value,coords$coords_ID)
proj4string = CRS("+init=epsg:27700"))
#create spatioal points dataframe
ndepSP = SpatialMultiPoints(coords, data = data.frame(coords$Value,coords$coords_ID),
proj4string = CRS("+init=epsg:27700"))
data.frame(coords$Value,coords$coords_ID)
View(coords)
#coords <- cbind(Easting = as.numeric(as.character(ndep$Easting)),
#Northing = as.numeric(as.character(ndep$Northing)))
#creatre unique id for each row
ndep_ID =  1:nrow(ndep)
#convert Ndep data to long lat and extratc relevant data
setwd("C:/dev/code/Woods2019/code")
library(rgdal)
ndep = read.csv("../data/Ndep2014.csv",
stringsAsFactors = TRUE,
header = TRUE, skip = 6)
#coords <- cbind(Easting = as.numeric(as.character(ndep$Easting)),
#Northing = as.numeric(as.character(ndep$Northing)))
#creatre unique id for each row
ndep_ID =  1:nrow(ndep)
ndep = cbind(ndep_ID, ndep)
View(ndep)
coords = cbind(ndep$Easting,ndep$Northing)
View(coords)
coords <- cbind(Easting = as.numeric(as.character(ndep$Easting)),
Northing = as.numeric(as.character(ndep$Northing)))
View(ndep)
coords <- cbind(Easting = as.numeric(as.character(ndep$Easting)),
Northing = as.numeric(as.character(ndep$Northing)))
View(coords)
#create spatioal points dataframe
ndepSP = SpatialMultiPoints(coords,
data = data.frame(coords$Value,coords$coords_ID),
proj4string = CRS("+init=epsg:27700"))
View(coords)
View(ndep)
#create spatioal points dataframe
ndepSP = SpatialPointsDataFrame(coords,
data = data.frame(coords$Value,coords$coords_ID),
proj4string = CRS("+init=epsg:27700"))
#create spatioal points dataframe
ndepSP = SpatialPointsDataFrame(coords,
data = data.frame(ndep$Value,ndep$coords_ID),
proj4string = CRS("+init=epsg:27700"))
View(ndep)
View(coords)
ndeplonglat = spTransform(ndep, CRS(latlong))
View(ndep)
#create spatioal points dataframe
ndepSP = SpatialPointsDataFrame(coords,
data = data.frame(ndep$Value,ndep$ndep_ID),
proj4string = CRS("+init=epsg:27700"))
ndeplonglat = spTransform(ndep, CRS(latlong))
View(ndepSP)
plot(ndepSP)
ndeplonglat = spTransform(ndepSP, CRS(latlong))
ndeplonglat = spTransform(ndepSP, CRS(latlong))
ndeplonglat = spTransform(ndepSP, CRS(latlong))
ndepSP$data
View(ndepSP)
ndep@data
ndepSP@data
ndeplonglat = spTransform(ndepSP@coords, CRS(latlong))
?spTransform
ndeplonglat = spTransform(ndepSP, ndepSP@coords.nrs)
ndeplonglat = spTransform(ndepSP, ndepSP@coords)
ndeplonglat = spTransform(ndepSP, CRS(ndepSP@coords))
View(ndepSP)
ndeplonglat = spTransform(ndepSP,  CRS("+init=epsg:27700"))
View(ndeplonglat)
ndeplonglat@data
head(ndeplonglat@data)
ndeplonglat@coords
head(ndeplonglat@coords)
ndeplonglat = spTransform(ndepSP,  CRS("+proj=utm +zone=32 +datum=WGS84"))
head(ndeplonglat@coords)
ndeplonglat = spTransform(ndepSP,  CRS("+proj=longlat +datum=WGS84"))
head(ndeplonglat@coords)
#change colnames
colnames(ndeplonglat@coords)[colnames(ndeplonglat@coords) == "Easting"] <- "Longitude"
colnames(ndeplonglat@coords)[colnames(ndeplonglat@coords) == "Northing"] <- "Latitude"
head(ndeplonglat@coords)
View(ndeplonglat)
ndeplonglat@data
head(ndeplonglat@data)
head(ndepSP@coords)
head(ndeplonglat@coords)
head(ndeplonglat@coords["Longitude"])
head(ndeplonglat@coords[,1])
head(ndepSP@data)
ndeplonglatdf = cbind(long = ndeplonglat@coords[,1],
lat = ndeplonglat@coords[,2],
ndep = ndeplonglat@data[,1])
View(ndeplonglatdf)
typeof(ndeplonglatdf)
library(ggrepel)
library(ggplot2)
library(maps)
library(mapproj)
UK <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = ndeplonglatdf, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
#geom_text_repel(data = ndeplonglatdf, aes(x = long, y = lat,label = site),
# inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
# add a clour gradient
mycol <- function(x, myrange, n=100) round( 1+(x-myrange[1])/diff(myrange) * (n-1))
mycol(x, range(ndeplonglatdf$ndep ), n)
mycol(ndeplonglatdf$ndep, range(ndeplonglatdf$ndep),100)
ndeplonglatdf = as.data.frame(cbind(long = ndeplonglat@coords[,1],
lat = ndeplonglat@coords[,2],
ndep = ndeplonglat@data[,1]))
mycol(ndeplonglatdf$ndep, range(ndeplonglatdf$ndep),100)
n=100
points(data$lon, data$lat, cex=.5,
pch=19,
col=colfunc(n)[mycol(humidity, range(humidity), n)])
points(ndeplonglatdf$long, ndeplonglatdf$lat, cex=.5,
pch=19,
col=colfunc(n)[mycol(ndeplonglatdf$ndep, range(ndeplonglatdf$ndep), n)])
ggmap(UK) +geom_point((data = ndeplonglatdf, aes(x = lat, y = long, colour = value)))
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = value))
install.packages("ggmap")
library(ggmap)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = value))
UK = get_map(location = UK, zoom = 4, maptype = "terrain", source = "google",color = "color")
?get_map
UK = get_map(location = "UK", zoom = 4, maptype = "terrain", source = "google",color = "color")
UK = get_map(location = c(51.5074,0.1278), zoom = 4,
maptype = "terrain", source = "google",color = "color")
register_google(key = "AIzaSyDgQVk3hW6c0G_xm6K_g-DCbbcTO_d_IkM")
UK = get_map(location = c(51.5074,0.1278), zoom = 4,
maptype = "terrain", source = "google",color = "color")
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = value))
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = "UK", zoom = 4,
maptype = "terrain", source = "google",color = "color")
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_mapget_map(location = c(lon = -0.016179, lat = 51.538525),
color = "color",
source = "google",
maptype = "satellite",
zoom = 17)
UK = get_map(location = c(lon = -0.016179, lat = 51.538525),
color = "color",
source = "google",
maptype = "satellite",
zoom = 17)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = -0.016179, lat = 51.538525),
color = "color",
source = "google",
maptype = "satellite",
zoom = 4)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = -0.016179, lat = 51.538525),
color = "color",
source = "google",
maptype = "satellite",
zoom = 7)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = -0.016179, lat = 51.538525),
color = "color",
source = "google",
maptype = "satellite",
zoom = 5)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = -0.016179, lat = 51.538525),
color = "color",
source = "google",
maptype = "satellite",
zoom = 6)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = -0.016179, lat = 52),
color = "color",
source = "google",
maptype = "satellite",
zoom = 6)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = -0.016179, lat = 53),
color = "color",
source = "google",
maptype = "satellite",
zoom = 6)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = -0.016179, lat = 54),
color = "color",
source = "google",
maptype = "satellite",
zoom = 6)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = 0, lat = 54),
color = "color",
source = "google",
maptype = "satellite",
zoom = 6)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = 1, lat = 54),
color = "color",
source = "google",
maptype = "satellite",
zoom = 6)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
# add a clour gradient
UK = get_map(location = c(lon = -1, lat = 54),
color = "color",
source = "google",
maptype = "satellite",
zoom = 6)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
UK = get_map(location = c(lon = -1.5, lat = 54),
color = "color",
source = "google",
maptype = "satellite",
zoom = 6)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = lat, y = long, colour = ndep))
View(ndeplonglatdf)
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = long, y = lat, colour = ndep))
ggmap(UK) +
geom_point(data = ndeplonglatdf, aes(x = long, y = lat, colour = ndep, breaks = 10))
ggmap(UK) +
geom_point(data = ndeplonglatdf,
aes(x = long, y = lat, colour = ndep, breaks = 10))+
scale_fill_gradient(low = "yellow", high = "red") +
scale_alpha(range = c(.25, .55))
ggmap(UK) +
geom_point(data = ndeplonglatdf,
aes(x = long, y = lat, colour = ndep))+
scale_fill_gradient(low = "yellow", high = "red") +
scale_alpha(range = c(.25, .55))
ggmap(UK) +
geom_point(data = ndeplonglatdf,
aes(x = long, y = lat, colour = ndep, bins = 10))+
scale_fill_gradient(low = "yellow", high = "red") +
scale_alpha(range = c(.25, .55))
ggmap(UK) +
geom_point(data = ndeplonglatdf,
aes(x = long, y = lat, colour = ndep))+
scale_colour_gradient(low = "white",
high = "red") + scale_size_continuous(range = c(4, 12))
ggmap(UK) +
geom_point(data = ndeplonglatdf,
aes(x = long, y = lat, colour = ndep))+
scale_colour_gradient(low = "white",
high = "red") +
scale_size_continuous(range = c(0,10))
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)colnam
colnames(mysites)[1] = "site"
UK <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)colnam
colnames(mysites)[1] = "site"
UK <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
setwd("C:/dev/code/Woods2019/code")
#create map
library(dplyr)
library(ggrepel)
library(ggplot2)
library(maps)
library(mapproj)
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
colnames(mysites)[1] = "site"
UK <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
UKmap <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UKmap, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
