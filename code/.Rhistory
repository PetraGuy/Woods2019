source('C:/dev/code/Woods2019/code/WoodsMap.R')
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
UK <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
setwd("C:/dev/code/Woods2019/code")
library(cluster) #for gower distance
library(dplyr)
library(Rtsne)
library(ggplot2)
library(factoextra)
#compute gower distance
gower_dist = daisy(woods[,-1],
type = list(nominal = c(1,2,3,4)),
metric = "gower",
stand = TRUE)
woods = read.csv("../data/woodprops.csv", stringsAsFactors = TRUE, header = TRUE)
#compute gower distance
gower_dist = daisy(woods[,-1],
type = list(nominal = c(1,2,3,4)),
metric = "gower",
stand = TRUE)
gower_mat = as.matrix(gower_dist)
sil_width = c(NA)
for (i in 2:10) {
pam_fit = pam(gower_dist,
diss = TRUE,
k=i)
sil_width[i] = pam_fit$silinfo$avg.width
}
plot(1:10, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(1:10, sil_width)
pam_results$the_summary
pam_fit = pam(gower_dist,diss = TRUE,k=3)
pam_results <- woods[-1]%>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
woods.pam =eclust(gower_dist,"kmeans",k = 3,stand = TRUE)
fviz_cluster(woods.pam, repel = TRUE,geom = "text")
woods.clust =eclust(gower_dist,"kmeans",k = 3,stand = TRUE)
#plot the groups
fviz_cluster(woods.clust, repel = TRUE,geom = "text")
fviz_silhouette(woods.clust)
install.packages("Gifi")
library(Gifi)
View(mysites)
View(woods)
View(woods)
#do a categorical PCA ising Gifi
woods.catpca = princals(woods[-1],ndim = 2,ordinal = c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE))
#do a categorical PCA ising Gifi
ordvec = c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE)
woods.catpca = princals(woods[-1],ndim = 2,ordinal = ordvec)
woods[-1]
#do a categorical PCA ising Gifi
ordvec = c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE)
woods.catpca = princals(woods[-1],ndim = 2,ordinal = ordvec)
plot(woods.catpca)
plot(woods.catpca,"transplot")
install.packages("ggfortify")
woods.catpca = autoplot(princals(woods[-1],ndim = 2,ordinal = ordvec))
library(ggfortify)
woods.catpca = autoplot(princals(woods[-1],ndim = 2,ordinal = ordvec))
install.packages("FactoMineR")
library(FactoMineR)
woods = read.csv("../data/woodprops.csv", stringsAsFactors = TRUE, header = TRUE)
woods.MCA = MCA(woods,ncp = 2, graph = TRUE)
woods.MCA = MCA(woods[-1],ncp = 8, graph = TRUE)
woods.MCA = MCA(woods[-1],ncp = 9, graph = TRUE)
woods[-1]
woods.MCA = MCA(woods[-1],ncp = 5, graph = TRUE)
woods.MCA = MCA(woods[-1],ncp = 4, graph = TRUE)
typeof(woods)
View(woods)
woods.MCA = MCA(woods[-1],ncp = 8, graph = TRUE)
woods.MCA = MCA(woods[-1],ncp = 7, graph = TRUE)
woods.MCA = MCA(woods[-1],ncp = 9)
woods.MCA = MCA(woods[-1],ncp = 10)
apply(woods,2,factor)
woods.MCA = MCA(woods[-1],ncp = 4, graph = TRUE)
woods.MCA = MCA(woods[-1],ncp = 9, graph = TRUE)
woods.MCA = MCA(woods[-1],ncp = 20, graph = TRUE)
typeof(woods$max.annualtemp)
apply(woods,2,as.factor)
typeof(woods$max.annualtemp)
sapply(woods,2,as.factor)
woods = read.csv("../data/woodprops.csv", stringsAsFactors = TRUE, header = TRUE)
lapply(woods,2,as.factor)
lapply(woods,as.factor)
woods.MCA = MCA(woods[-1],ncp = 20, graph = TRUE)
woods.MCA = MCA(woods[-1],ncp = 19, graph = TRUE)
woods.MCA = MCA(woods[-1],graph = TRUE)
woodscut = woods[-1]
View(woodscut)
woods.MCA = MCA(woodscut,graph = TRUE)
woods = read.csv("../data/woodprops.csv", stringsAsFactors = TRUE, header = TRUE)
View(woods)
woods.qual = woods[2,3,4,5]
woods.qual = woods[,c(2,3,4,5)]
woods.qualMCA = MCA(woods.qual,graph = TRUE)
woods.qualMCA = MCA(woods.qual,NCP = 4,graph = TRUE)
woods.qualMCA = MCA(woods.qual,ncp = 4,graph = TRUE)
woods.qualMCA = MCA(woods.qual,ncp = 2,graph = TRUE)
fviz_mca_biplot(woods.qualMCA,
repel = TRUE,
ggtheme = theme_minimal())
View(woods)
woods.qualMCA = MCA(woods.qual,
quanti.sup = c(6,7,8,9),
quali.sup = c(2,3,4,5),
ncp = 2,
graph = TRUE)
woods.qualMCA = MCA(woods.qual,
ind.sup = c(2:9),
quanti.sup = c(6,7,8,9),
quali.sup = c(2,3,4,5),
ncp = 2,
graph = TRUE)
woods.qualMCA = MCA(woods,
ind.sup = c(2:9),
quanti.sup = c(6,7,8,9),
quali.sup = c(2,3,4,5),
ncp = 2,
graph = TRUE)
setwd("C:/dev/code/Woods2019/code")
woods = read.csv("../data/woodprops.csv", stringsAsFactors = TRUE, header = TRUE)
gower_dist = daisy(woods[,-1],
type = list(nominal = c(1,2,3,4)),
metric = "gower",
stand = TRUE)
gower_mat = as.matrix(gower_dist)
sil_width = c(NA)
for (i in 2:10) {
pam_fit = pam(gower_dist,
diss = TRUE,
k=i)
sil_width[i] = pam_fit$silinfo$avg.width
}
plot(1:10, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(1:10, sil_width)
sil_width = c(NA)
for (i in 2:19) {
pam_fit = pam(gower_dist,
diss = TRUE,
k=i)
sil_width[i] = pam_fit$silinfo$avg.width
}
plot(1:10, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(1:10, sil_width)
sil_width = c(NA)
for (i in 2:19) {
pam_fit = pam(gower_dist,
diss = TRUE,
k=i)
sil_width[i] = pam_fit$silinfo$avg.width
}
plot(1:19, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(1:19, sil_width)
sil_width = c(NA)
for (i in 2:19) {
pam_fit = pam(gower_dist,
diss = TRUE,
k=i)
sil_width[i] = pam_fit$silinfo$avg.width
}
plot(2:19, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(2:19, sil_width)
?plot
axis(side = 1,at = c(2:19))
pam_fit = pam(gower_dist,diss = TRUE,k=13)
pam_results <- woods[-1]%>%
mutate(cluster = pam_fit$clustering) %>%
group_by(cluster) %>%
do(the_summary = summary(.))
pam_results$the_summary
woods.clust =eclust(gower_dist,"kmeans",k = 13,stand = TRUE)
#plot the groups
fviz_cluster(woods.clust, repel = TRUE,geom = "text")
fviz_silhouette(woods.clust)
View(woods)
View(woods.clust)
df = cbind(woods[1,woods.clust])
df = cbind(woods[1,],woods.clust)
woods.clust =eclust(gower_dist,"kmeans",k = 13,stand = TRUE)
#plot the groups
fviz_cluster(woods.clust, repel = TRUE,geom = "text")
fviz_silhouette(woods.clust)
ordvec = c(TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE)
woods.catpca = autoplot(princals(woods[-1],ndim = 2,ordinal = ordvec))
woods.catpca = princals(woods[-1],ndim = 2,ordinal = ordvec)
plot(woods.catpca)
plot(woods.catpca,repel = TRUE)
rownames(gower_dist) = woods$site
gower_dist
rownames(as.df(gower_dist)) = woods$site
rownames(as.data.frame(gower_dist)) = woods$site
rownames(as.matrix(gower_dist)) = woods$site
rownames(as.matrix(gower_dist)) = woods$site
gower_matrix = as.matrix(gower_dist)
rownames(gower_matrix) = woods$site
#cluster using any other method and plot results
woods.clust =eclust(gower_matrix,"kmeans",k = 13,stand = TRUE)
fviz_silhouette(woods.clust)
woods = read.csv("../data/woodprops.csv", stringsAsFactors = TRUE, header = TRUE)
#compute gower distance
gower_dist = daisy(woods[,-1],
type = list(nominal = c(1,2,3,4)),
metric = "gower",
stand = TRUE)
gower_mat = as.matrix(gower_dist)
#add rownames so plat has labels
rownames(gower_matrix) = woods$site
#compute gower distance
gower_dist = daisy(woods[,-1],
type = list(nominal = c(1,2,3,4)),
metric = "gower",
stand = TRUE)
gower_mat = as.matrix(gower_dist)
#add rownames so plat has labels
rownames(gower_matrix) = woods$site
#add rownames so plat has labels
rownames(gower_mat) = woods$site
woods[which(gower_mat == min(gower_mat[gower_mat != min(gower_mat)]),
arr.ind = TRUE)[1, ], ]
#most dissimilar
woods[which(gower_mat == max(gower_mat[gower_mat != max(gower_mat)]),
arr.ind = TRUE)[1, ], ]
sil_width = c(NA)
for (i in 2:19) {
pam_fit = pam(gower_dist,
diss = TRUE,
k=i)
sil_width[i] = pam_fit$silinfo$avg.width
}
plot(2:19, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(2:19, sil_width)
axis(side = 1,at = c(2:19))
#cluster using any other method and plot results
woods.clust =eclust(gower_mat,"kmeans",k = 13,stand = TRUE)
fviz_cluster(woods.clust, repel = TRUE,geom = "text")
fviz_silhouette(woods.clust)
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
UK <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UK, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
#cluster using any other method and plot results
woods.clust =eclust(gower_mat,"kmeans",k = 13,stand = TRUE)
#plot the groups
fviz_cluster(woods.clust, repel = TRUE,geom = "text")
#cluster using any other method and plot results
woods.clust =eclust(gower_mat,"pam",k = 13,stand = TRUE)
#cluster using any other method and plot results
woods.clust =eclust(gower_mat,"kmeans",k = 13,stand = TRUE)
sil_width = c(NA)
for (i in 2:19) {
pam_fit = pam(gower_dist,
diss = TRUE,
k=i)
sil_width[i] = pam_fit$silinfo$avg.width
}
plot(2:19, sil_width,
xlab = "Number of clusters",
ylab = "Silhouette Width")
lines(2:19, sil_width)
axis(side = 1,at = c(2:19))
#cluster using any other method and plot results
woods.clust =eclust(gower_mat,"pam",k = 13,stand = TRUE)
install.packages("rgdal")
library(rgdal)
spTransform(22500,497500)
?spTransform
