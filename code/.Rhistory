# plot a map
setwd("C:/dev/code/Woods2019/code")
#create map
library(dplyr)
library(ggrepel)
library(ggplot2)
library(maps)
library(mapproj)
#read in the data you want plotted
mapdata = readRDS("../data/ndepavelonglat")
#get average ndep for map colour
mid = mean(mapdata$NO2_NO3)
#get a map of the UK
UKmap <- map_data(map = "world", region = "UK")
ggplot(data = UKmap, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
#put in datafile containg colnames long lat and give solor the colname of varible to map
geom_point(data = mapdata, mapping = aes(x = long, y = lat, color = NO2_NO3))+
theme(plot.margin=unit(c(0,0,0,0),"mm"))+
#mid calculated above is mean of the data you are plotting. remove this for points
scale_color_gradient2(midpoint=mid, low="blue", mid="white",
high="red", space ="Lab" )
ggplot(data = UKmap, aes(x = long, y = lat)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
#put in datafile containg colnames long lat and give solor the colname of varible to map
geom_point(data = mapdata, mapping = aes(x = long, y = lat, color = NO2_NO3))+
theme(plot.margin=unit(c(0,0,0,0),"mm"))+
#mid calculated above is mean of the data you are plotting. remove this for points
scale_color_gradient2(midpoint=mid, low="blue", mid="white",
high="red", space ="Lab" )
ggplot(data = UKmap, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
#put in datafile containg colnames long lat and give solor the colname of varible to map
geom_point(data = mapdata, mapping = aes(x = long, y = lat, color = NO2_NO3), inherit.aes = FALSE)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))+
#mid calculated above is mean of the data you are plotting. remove this for points
scale_color_gradient2(midpoint=mid, low="blue", mid="white",
high="red", space ="Lab" )
View(mapdata)
View(mapdata)
value = "NH3_NH4"
#get average ndep for map colour
mid = mean(mapdata["value"])
#get average ndep for map colour
mid = mean(mapdata$value)
ggplot(data = UKmap, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
#put in datafile containg colnames long lat and give solor the colname of varible to map
geom_point(data = mapdata, mapping = aes(x = long, y = lat, color = NH3_NH4), inherit.aes = FALSE)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))+
#mid calculated above is mean of the data you are plotting. remove this for points
scale_color_gradient2(midpoint=mid, low="blue", mid="white",
high="red", space ="Lab" )
#get average ndep for map colour
mid = mean(mapdata$NH3_NH4)
ggplot(data = UKmap, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
#put in datafile containg colnames long lat and give solor the colname of varible to map
geom_point(data = mapdata, mapping = aes(x = long, y = lat, color = NH3_NH4), inherit.aes = FALSE)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))+
#mid calculated above is mean of the data you are plotting. remove this for points
scale_color_gradient2(midpoint=mid, low="blue", mid="white",
high="red", space ="Lab" )
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
View(mysites)
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
install.packages("data.table")
library(data.table)
library(dplyr)
View(extractdata)
matched = extractdata%>%filter(long %in% mysites$long)
View(matched)
View(mysites)
matched = extractdata%>%filter(round(long,4) %in% round(mysites$long,4)
matched = extractdata%>%filter(round(long,4) %in% round(mysites$long,4))
View(mysites)
#round dps of long lats
apply(mysites[2:3],round,4)
#round dps of long lats
lapply(mysites[2:3],round,4)
View(mysites)
#round dps of long lats
mysites = lapply(mysites[2:3],round,4)
View(matched)
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
#round dps of long lats
mysites[2:3] = lapply(mysites[2:3],round,4)
View(mysites)
extractdata[7:8] = lapply(extractdata[7:8], round,4)
matched = extractdata%>%filter(long %in% mysites$long))
matched = extractdata%>%filter(long %in% mysites$long)
View(matched)
mysites[2:3] = lapply(mysites[2:3],round,3)
extractdata[7:8] = lapply(extractdata[7:8], round,3)
matched = extractdata%>%filter(long %in% mysites$long)
View(matched)
matchedlong = extractdata%>%filter(long %in% mysites$long)
View(matched)
matchedlatlong = extractdata%>%filter(lat %>% matchedlong)
matchedlong = extractdata%>%filter(long %in% mysites$long)
matchedlatlong = extractdata%>%filter(lat %>% matchedlong)
matchedlatlong = extractdata%>%filter(lat %>% matchedlong$lat)
View(matchedlong)
matchedlatlong = extractdata%>%filter(lat %in% matchedlong$lat)
View(matched)
View(mysites)
mysites[2:3] = lapply(mysites[2:3],round,4)
extractdata[7:8] = lapply(extractdata[7:8], round,4)
matchedlong = extractdata%>%filter(long %in% mysites$long)
matchedlatlong = extractdata%>%filter(lat %in% matchedlong$lat)
View(matchedlatlong)
View(matchedlong)
mysites[2:3] = lapply(mysites[2:3],round,2)
extractdata[7:8] = lapply(extractdata[7:8], round,2)
matchedlong = extractdata%>%filter(long %in% mysites$long)
#round dps of long lats
mysites[2:3] = lapply(mysites[2:3],round,1)
extractdata[7:8] = lapply(extractdata[7:8], round,1)
matchedlong = extractdata%>%filter(long %in% mysites$long)
matchedlong = extractdata%>%filter(long %in% mysites$long)
matchedlong = extractdata%>%filter(lat %in% mysites$lat)
matchedlatlong = extractdata%>%filter(long %in% matchedlong$long)
setwd("C:/dev/code/Woods2019/code")
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
mysites[2:3] = lapply(mysites[2:3],round,1)
extractdata[7:8] = lapply(extractdata[7:8], round,1)
matchedlong = extractdata%>%filter(lat %in% mysites$lat)
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
#round dps of long lats
mysites[2:3] = lapply(mysites[2:3],round,1)
extractdata[7:8] = lapply(extractdata[7:8], round,1)
matchedlong = extractdata%>%filter(lat %in% mysites$lat)
View(matchedlong)
matchedlatlong = extractdata%>%filter(long %in% matchedlong$long)
matchedlat = extractdata%>%filter(lat %in% mysites$lat)
matchedlatlong = matchedlong%>%filter(long %in% mysites$long)
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
mysites[2:3] = lapply(mysites[2:3],round,2)
extractdata[7:8] = lapply(extractdata[7:8], round,2)
matchedlat = extractdata%>%filter(lat %in% mysites$lat)
matchedlatlong = matchedlong%>%filter(long %in% mysites$long)
matchedlatlong = matchedlat%>%filter(long %in% mysites$long)
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
mysites[2:3] = lapply(mysites[2:3],round,3)
extractdata[7:8] = lapply(extractdata[7:8], round,3)
matchedlat = extractdata%>%filter(lat %in% mysites$lat)
View(matchedlat)
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
mysites[2:3] = lapply(mysites[2:3],round,2)
extractdata[7:8] = lapply(extractdata[7:8], round,2)
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
mysites[2:3] = lapply(mysites[2:3],round,2)
extractdata[7:8] = lapply(extractdata[7:8], round,2)
View(extractdata)
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
View(extractdata)
mysites[2:3] = lapply(mysites[2:3],round,2)
extractdata[7:8] = lapply(extractdata[7:8], round,2)
matchedlat = extractdata%>%filter(lat %in% mysites$lat)
matchedlatlong = matchedlat%>%filter(long %in% mysites$long)
View(matchedlatlong)
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
#round dps of long lats
mysites[2:3] = lapply(mysites[2:3],round,3)
extractdata[7:8] = lapply(extractdata[7:8], round,3)
matchedlat = extractdata%>%filter(lat %in% mysites$lat)
matchedlatlong = matchedlat%>%filter(long %in% mysites$long)
View(matchedlat)
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
#round dps of long lats
mysites[2:3] = lapply(mysites[2:3],round,1)
extractdata[7:8] = lapply(extractdata[7:8], round,1)
matchedlat = extractdata%>%filter(lat %in% mysites$lat)
matchedlatlong = matchedlat%>%filter(long %in% mysites$long)
View(matchedlatlong)
matchedlat = extractdata%>%filter(long %in% mysites$long)
matchedlatlong = matchedlat%>%filter(lat %in% mysites$lat)
View(matchedlatlong)
?inner_join
matchedlonglat = inner_join(mysites,extractdata, by = c(long,lat))
View(mysites)
View(extractdata)
matchedlonglat = inner_join(mysites,extractdata, by = c("long","lat"))
View(matchedlonglat)
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
#round dps of long lats
mysites[2:3] = lapply(mysites[2:3],round,2)
extractdata[7:8] = lapply(extractdata[7:8], round,2)
matchedlonglat = inner_join(mysites,extractdata, by = c("long","lat"))
View(matchedlonglat)
library(data.table)
library(dplyr)
setwd("C:/dev/code/Woods2019/code")
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
#round dps of long lats
mysites[2:3] = lapply(mysites[2:3],round,2)
extractdata[7:8] = lapply(extractdata[7:8], round,2)
View(mysites)
library(data.table)
#locations of my sites
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
#df of data to be extracted
extractdata = readRDS("../data/ndepavelonglat")
df1[dt , list( obs , time1 , temp ) , roll = "nearest" ]
df1 = data.table(mysites, key = "lat")
df2 = data.table(extractdata, key = "lat")
df1[dt , list( obs , time1 , temp ) , roll = "nearest" ]
View(extractdata)
library(data.table)
df2[dt , list(long,lat,NO2_NO3) , roll = "nearest" ]
View(df1)
View(df2)
mysites = data.table(mysites)
mysites = data.table(mysites)
extractdata =  data.table(extractdata)
setkey(mysites,lat)
setkey(extractdata,lat)
df2 <- lat[extractdata, roll = "nearest"]
df2 <- extractdata[mysites, roll = "nearest"]
View(df2)
df2 <- mysites[extractdata, roll = "nearest"]
View(df2)
df2 <- extractdata[mysites, roll = "nearest"]
View(df2)
#locations of my sites
mysites = data.table(read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE))
#df of data to be extracted
extractdata = data.table(readRDS("../data/ndepavelonglat"))
setkey(mysites,lat)
setkey(extractdata,lat)
df2 <- extractdata[mysites, roll = "nearest"]
View(df2)
extracted <- extractdata[mysites, roll = "nearest"]
View(extracted)
View(extracted)
saveRDS(extracted, "../data/ndepbysite")
mysites = read.csv("../data/woodslocs.csv", stringsAsFactors = TRUE, header = TRUE)
colnames(mysites)[1] = "site"
UKmap <- map_data(map = "world", region = "UK") # changed map to "world"
ggplot(data = UKmap, aes(x = long, y = lat, group = group)) +
geom_polygon(alpha = 0.5) +
scale_x_continuous(breaks = c(-6,-5,-4,-3,-2,-1,0,1),limits = c(-7,2))+
scale_y_continuous(breaks = c(50,51,52,53,54,55,56,57,58),limits = c(50,59))+
coord_map()+
geom_point(data = mysites, mapping = aes(x = long, y = lat), # this data is file of long and lats
inherit.aes = FALSE)+
geom_text_repel(data = mysites, aes(x = long, y = lat,label = site),
inherit.aes = FALSE, size = 4, hjust = 0.5, vjust = 0.5)+
theme(plot.margin=unit(c(0,0,0,0),"mm"))
View(mysites)
